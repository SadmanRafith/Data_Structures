Understanding the snippet below:

1. An element in a linked list is a struct Node. It is made to hold integer data 
   and a pointer of data type struct Node*, as it has to point to another struct Node. 

2. We’ll create the below illustrated linked list.

3. We will always create individual nodes and link them to the next node via the arrow 
   operator ‘→’.

4. First, we’ll define a structure Node and create two of its members, an int variable 
   data, to store the current node's value and a struct node* pointer variable next. 


5. Now, we can move on to our main() and start creating these nodes. We’ll name the first 
   node, head. Define a pointer to head node by struct node* head. And similarly for the 
   other nodes. Request the memory location for each of these nodes from heap via malloc 
   using the below snippet.

6. Link these nodes using the arrow operator and call the traversal function.

7. Create a void function linkedlistTraversal and pass into it the pointer to the head node.

8. Run a while loop while the pointer doesn’t point to a NULL. And keep changing the pointer 
   next each time you are done printing the data of the current node.